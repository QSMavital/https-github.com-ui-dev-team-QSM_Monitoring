// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$icon-all-actions-name: 'icon-all_actions';
$icon-all-actions-x: 0px;
$icon-all-actions-y: 0px;
$icon-all-actions-offset-x: 0px;
$icon-all-actions-offset-y: 0px;
$icon-all-actions-width: 64px;
$icon-all-actions-height: 58px;
$icon-all-actions-total-width: 190px;
$icon-all-actions-total-height: 85px;
$icon-all-actions-image: 'assets/images/sprite.png';
$icon-all-actions: (0px, 0px, 0px, 0px, 64px, 58px, 190px, 85px, 'assets/images/sprite.png', 'icon-all_actions', );
$icon-broken-name: 'icon-broken';
$icon-broken-x: 0px;
$icon-broken-y: 58px;
$icon-broken-offset-x: 0px;
$icon-broken-offset-y: -58px;
$icon-broken-width: 31px;
$icon-broken-height: 27px;
$icon-broken-total-width: 190px;
$icon-broken-total-height: 85px;
$icon-broken-image: 'assets/images/sprite.png';
$icon-broken: (0px, 58px, 0px, -58px, 31px, 27px, 190px, 85px, 'assets/images/sprite.png', 'icon-broken', );
$icon-fix-name: 'icon-fix';
$icon-fix-x: 31px;
$icon-fix-y: 58px;
$icon-fix-offset-x: -31px;
$icon-fix-offset-y: -58px;
$icon-fix-width: 28px;
$icon-fix-height: 27px;
$icon-fix-total-width: 190px;
$icon-fix-total-height: 85px;
$icon-fix-image: 'assets/images/sprite.png';
$icon-fix: (31px, 58px, -31px, -58px, 28px, 27px, 190px, 85px, 'assets/images/sprite.png', 'icon-fix', );
$icon-logo-benleumi-name: 'icon-logo-benleumi';
$icon-logo-benleumi-x: 64px;
$icon-logo-benleumi-y: 0px;
$icon-logo-benleumi-offset-x: -64px;
$icon-logo-benleumi-offset-y: 0px;
$icon-logo-benleumi-width: 126px;
$icon-logo-benleumi-height: 22px;
$icon-logo-benleumi-total-width: 190px;
$icon-logo-benleumi-total-height: 85px;
$icon-logo-benleumi-image: 'assets/images/sprite.png';
$icon-logo-benleumi: (64px, 0px, -64px, 0px, 126px, 22px, 190px, 85px, 'assets/images/sprite.png', 'icon-logo-benleumi', );
$icon-unavailable-name: 'icon-unavailable';
$icon-unavailable-x: 59px;
$icon-unavailable-y: 58px;
$icon-unavailable-offset-x: -59px;
$icon-unavailable-offset-y: -58px;
$icon-unavailable-width: 27px;
$icon-unavailable-height: 27px;
$icon-unavailable-total-width: 190px;
$icon-unavailable-total-height: 85px;
$icon-unavailable-image: 'assets/images/sprite.png';
$icon-unavailable: (59px, 58px, -59px, -58px, 27px, 27px, 190px, 85px, 'assets/images/sprite.png', 'icon-unavailable', );
$icon-working-name: 'icon-working';
$icon-working-x: 64px;
$icon-working-y: 22px;
$icon-working-offset-x: -64px;
$icon-working-offset-y: -22px;
$icon-working-width: 35px;
$icon-working-height: 25px;
$icon-working-total-width: 190px;
$icon-working-total-height: 85px;
$icon-working-image: 'assets/images/sprite.png';
$icon-working: (64px, 22px, -64px, -22px, 35px, 25px, 190px, 85px, 'assets/images/sprite.png', 'icon-working', );
$spritesheet-width: 190px;
$spritesheet-height: 85px;
$spritesheet-image: 'assets/images/sprite.png';
$spritesheet-sprites: ($icon-all-actions, $icon-broken, $icon-fix, $icon-logo-benleumi, $icon-unavailable, $icon-working, );
$spritesheet: (190px, 85px, 'assets/images/sprite.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
